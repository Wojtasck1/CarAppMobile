"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var DataService = (function () {
    function DataService() {
        this.cars = [
            {
                "id": 1,
                "plates": "TKIYU32",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 1,
                "last_oil_change": 150000
            },
            {
                "id": 2,
                "plates": "TK9528L",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 2,
                "last_oil_change": 150000
            },
            {
                "id": 3,
                "plates": "TK1434N",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 3,
                "last_oil_change": 150000
            },
            {
                "id": 4,
                "plates": "TK8740M",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 4,
                "last_oil_change": 150000
            },
            {
                "id": 5,
                "plates": "TK3740H",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 5,
                "last_oil_change": 150000
            },
            {
                "id": 6,
                "plates": "TK9242J",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 6,
                "last_oil_change": 150000
            },
            {
                "id": 7,
                "plates": "TK3619R",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 7,
                "last_oil_change": 150000
            },
            {
                "id": 8,
                "plates": "TKI 04544",
                "overview": "2017-07-14 19:43:37 +0100",
                "insurance": "2017-08-14 19:43:37 +0100",
                "course": "150000",
                "description": "samochod sprawny",
                "users_id": 8,
                "last_oil_change": 150000
            }
        ];
    }
    DataService.prototype.getCars = function () {
        return this.cars;
    };
    DataService.prototype.getCar = function (id) {
        for (var i = 0; i < this.cars.length; i++) {
            if (this.cars[i].id == id) {
                return this.cars[i];
            }
        }
        return -1;
    };
    DataService.prototype.delete = function (id) {
        for (var i = 0; i < this.cars.length; i++) {
            if (this.cars[i].id == id) {
                this.cars.splice(i, 1);
                break;
            }
        }
    };
    DataService.prototype.add = function (value) {
        this.cars.push({
            "id": Math.floor(Math.random() * (100 - 1)) + 1,
            "name": value
        });
    };
    DataService.prototype.edit = function (name, id) {
        for (var i = 0; i < this.cars.length; i++) {
            if (this.cars[i].id == id) {
                this.cars[i].name = name;
                break;
            }
        }
    };
    return DataService;
}());
DataService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], DataService);
exports.DataService = DataService;
//# sourceMappingURL=data:application/json;base64,